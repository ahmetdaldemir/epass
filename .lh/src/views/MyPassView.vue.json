{
    "sourceFile": "src/views/MyPassView.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1754295369003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754313393537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,17 +42,22 @@\n             </div>\r\n             <div v-if=\"tickets.length === 0\" class=\"empty-state\">No tickets found.</div>\r\n           </div>\r\n         </section>\r\n-        <!-- My Info -->\r\n-        <section v-if=\"activeTab==='info'\">\r\n-          <h2>My Info</h2>\r\n-          <form @submit.prevent=\"saveInfo\" class=\"info-form\">\r\n-            <input v-model=\"userInfo.name\" type=\"text\" placeholder=\"Name\" required />\r\n-            <input v-model=\"userInfo.email\" type=\"email\" placeholder=\"E-mail\" required />\r\n-            <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n-          </form>\r\n-        </section>\r\n+                 <!-- My Info -->\r\n+         <section v-if=\"activeTab==='info'\">\r\n+           <h2>My Info</h2>\r\n+           <form @submit.prevent=\"saveInfo\" class=\"info-form\">\r\n+             <input v-model=\"userInfo.fullname\" type=\"text\" placeholder=\"Full Name\" required />\r\n+             <input v-model=\"userInfo.email\" type=\"email\" placeholder=\"E-mail\" required />\r\n+             <input v-model=\"userInfo.phone\" type=\"tel\" placeholder=\"Phone Number\" />\r\n+             <input v-model=\"userInfo.address\" type=\"text\" placeholder=\"Address\" />\r\n+             <input v-model=\"userInfo.city\" type=\"text\" placeholder=\"City\" />\r\n+             <input v-model=\"userInfo.country\" type=\"text\" placeholder=\"Country\" />\r\n+             <input v-model=\"userInfo.zip_code\" type=\"text\" placeholder=\"ZIP Code\" />\r\n+             <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n+           </form>\r\n+         </section>\r\n         <!-- Change Password -->\r\n         <section v-if=\"activeTab==='password'\">\r\n           <h2>Change Password</h2>\r\n           <form @submit.prevent=\"changePassword\" class=\"info-form\">\r\n@@ -79,39 +84,77 @@\n const tickets = ref([\r\n   { id: 1, passType: '1 Day Pass', startDate: '2024-07-01', status: 'active' },\r\n   { id: 2, passType: '3 Day Pass', startDate: '2024-06-15', status: 'cancelled' }\r\n ])\r\n-const userInfo = ref({ name: 'John Doe', email: 'john@example.com' })\r\n+const userInfo = ref({ \r\n+  fullname: '', \r\n+  email: '', \r\n+  phone: '', \r\n+  address: '', \r\n+  city: '', \r\n+  country: '', \r\n+  zip_code: '' \r\n+})\r\n const oldPassword = ref('')\r\n const newPassword = ref('')\r\n const newPasswordRepeat = ref('')\r\n const passwordMsg = ref('')\r\n const passwordSuccess = ref(false)\r\n \r\n // Sayfa yüklendiğinde kullanıcının login durumunu kontrol et\r\n-onMounted(() => {\r\n+onMounted(async () => {\r\n   const isLoggedIn = localStorage.getItem('isLoggedIn')\r\n   const userData = localStorage.getItem('user')\r\n   \r\n   if (isLoggedIn === 'true' && userData) {\r\n     loggedIn.value = true\r\n     try {\r\n       const user = JSON.parse(userData)\r\n-      userInfo.value = {\r\n-        name: user.name || 'User',\r\n-        email: user.email || ''\r\n-      }\r\n+      // Kullanıcı bilgilerini database'den çek\r\n+      await fetchUserProfile(user.id)\r\n     } catch (error) {\r\n       console.error('Error parsing user data:', error)\r\n     }\r\n   }\r\n })\r\n \r\n+// Kullanıcı profil bilgilerini database'den çek\r\n+async function fetchUserProfile(userId) {\r\n+  try {\r\n+    const response = await fetch(`https://searchyourtour.com/api/customer/profile/${userId}`, {\r\n+      method: 'GET',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'Accept': 'application/json',\r\n+        'X-Requested-With': 'XMLHttpRequest'\r\n+      }\r\n+    })\r\n+\r\n+    const result = await response.json()\r\n+    \r\n+    if (result.status) {\r\n+      userInfo.value = {\r\n+        fullname: result.data.fullname || '',\r\n+        email: result.data.email || '',\r\n+        phone: result.data.phone || '',\r\n+        address: result.data.address || '',\r\n+        city: result.data.city || '',\r\n+        country: result.data.country || '',\r\n+        zip_code: result.data.zip_code || ''\r\n+      }\r\n+    } else {\r\n+      console.error('Failed to fetch user profile:', result.message)\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Error fetching user profile:', error)\r\n+  }\r\n+}\r\n+\r\n async function login() {\r\n   try {\r\n     loginError.value = ''\r\n     \r\n-    const response = await fetch('/api/login', {\r\n+    const response = await fetch('https://searchyourtour.com/api/login', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n@@ -153,9 +196,48 @@\n   localStorage.removeItem('isLoggedIn')\r\n }\r\n function editTicket(ticket) { alert('Edit ticket: ' + ticket.id) }\r\n function cancelTicket(ticket) { ticket.status = 'cancelled' }\r\n-function saveInfo() { alert('Info saved!') }\r\n+async function saveInfo() {\r\n+  try {\r\n+    const userData = localStorage.getItem('user')\r\n+    if (!userData) {\r\n+      alert('User not found. Please login again.')\r\n+      return\r\n+    }\r\n+\r\n+    const user = JSON.parse(userData)\r\n+    \r\n+    const response = await fetch(`https://searchyourtour.com/api/customer/profile/update/${user.id}`, {\r\n+      method: 'PUT',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'Accept': 'application/json',\r\n+        'X-Requested-With': 'XMLHttpRequest'\r\n+      },\r\n+      body: JSON.stringify({\r\n+        fullname: userInfo.value.fullname,\r\n+        email: userInfo.value.email,\r\n+        phone: userInfo.value.phone,\r\n+        address: userInfo.value.address,\r\n+        city: userInfo.value.city,\r\n+        country: userInfo.value.country,\r\n+        zip_code: userInfo.value.zip_code\r\n+      })\r\n+    })\r\n+\r\n+    const result = await response.json()\r\n+    \r\n+    if (result.status) {\r\n+      alert('Profile updated successfully!')\r\n+    } else {\r\n+      alert('Failed to update profile: ' + (result.message || 'Unknown error'))\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Error updating profile:', error)\r\n+    alert('An error occurred while updating profile. Please try again.')\r\n+  }\r\n+}\r\n function changePassword() {\r\n   if (oldPassword.value !== '1234') {\r\n     passwordMsg.value = 'Current password is incorrect.'\r\n     passwordSuccess.value = false\r\n"
                },
                {
                    "date": 1754316917996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,29 +236,68 @@\n     console.error('Error updating profile:', error)\r\n     alert('An error occurred while updating profile. Please try again.')\r\n   }\r\n }\r\n-function changePassword() {\r\n-  if (oldPassword.value !== '1234') {\r\n-    passwordMsg.value = 'Current password is incorrect.'\r\n+async function changePassword() {\r\n+  try {\r\n+    passwordMsg.value = ''\r\n     passwordSuccess.value = false\r\n-    return\r\n-  }\r\n-  if (newPassword.value.length < 6) {\r\n-    passwordMsg.value = 'New password must be at least 6 characters.'\r\n+\r\n+    // Validation\r\n+    if (newPassword.value.length < 6) {\r\n+      passwordMsg.value = 'New password must be at least 6 characters.'\r\n+      passwordSuccess.value = false\r\n+      return\r\n+    }\r\n+    if (newPassword.value !== newPasswordRepeat.value) {\r\n+      passwordMsg.value = 'New passwords do not match.'\r\n+      passwordSuccess.value = false\r\n+      return\r\n+    }\r\n+\r\n+    // Get user data from localStorage\r\n+    const userData = localStorage.getItem('user')\r\n+    if (!userData) {\r\n+      passwordMsg.value = 'User not found. Please login again.'\r\n+      passwordSuccess.value = false\r\n+      return\r\n+    }\r\n+\r\n+    const user = JSON.parse(userData)\r\n+\r\n+    // Send request to backend\r\n+    const response = await fetch(`https://searchyourtour.com/api/customer/change-password/${user.id}`, {\r\n+      method: 'PUT',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'Accept': 'application/json',\r\n+        'X-Requested-With': 'XMLHttpRequest'\r\n+      },\r\n+      body: JSON.stringify({\r\n+        current_password: oldPassword.value,\r\n+        new_password: newPassword.value,\r\n+        new_password_confirmation: newPasswordRepeat.value\r\n+      })\r\n+    })\r\n+\r\n+    const result = await response.json()\r\n+    \r\n+    if (result.status) {\r\n+      passwordMsg.value = 'Password changed successfully!'\r\n+      passwordSuccess.value = true\r\n+      // Clear form\r\n+      oldPassword.value = ''\r\n+      newPassword.value = ''\r\n+      newPasswordRepeat.value = ''\r\n+    } else {\r\n+      passwordMsg.value = result.message || 'Failed to change password'\r\n+      passwordSuccess.value = false\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Error changing password:', error)\r\n+    passwordMsg.value = 'An error occurred while changing password. Please try again.'\r\n     passwordSuccess.value = false\r\n-    return\r\n   }\r\n-  if (newPassword.value !== newPasswordRepeat.value) {\r\n-    passwordMsg.value = 'New passwords do not match.'\r\n-    passwordSuccess.value = false\r\n-    return\r\n-  }\r\n-  passwordMsg.value = 'Password changed successfully!'\r\n-  passwordSuccess.value = true\r\n-  oldPassword.value = ''\r\n-  newPassword.value = ''\r\n-  newPasswordRepeat.value = ''\r\n }\r\n </script>\r\n \r\n <style scoped>\r\n"
                },
                {
                    "date": 1754319286892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,35 +15,39 @@\n     <div v-else class=\"dashboard-flex\">\r\n       <!-- Sol Menü -->\r\n       <aside class=\"side-menu\">\r\n         <div class=\"menu-title\">My Account</div>\r\n-        <ul>\r\n-          <li :class=\"{active: activeTab==='tickets'}\" @click=\"activeTab='tickets'\">My Tickets</li>\r\n-          <li :class=\"{active: activeTab==='info'}\" @click=\"activeTab='info'\">My Info</li>\r\n-          <li :class=\"{active: activeTab==='password'}\" @click=\"activeTab='password'\">Change Password</li>\r\n-        </ul>\r\n+                 <ul>\r\n+           <li :class=\"{active: activeTab==='reservations'}\" @click=\"activeTab='reservations'\">My Reservations</li>\r\n+           <li :class=\"{active: activeTab==='info'}\" @click=\"activeTab='info'\">My Info</li>\r\n+           <li :class=\"{active: activeTab==='password'}\" @click=\"activeTab='password'\">Change Password</li>\r\n+         </ul>\r\n         <button class=\"btn btn-secondary logout-btn\" @click=\"logout\">Logout</button>\r\n       </aside>\r\n       <!-- Sağ İçerik -->\r\n       <main class=\"main-content\">\r\n-        <!-- My Tickets -->\r\n-        <section v-if=\"activeTab==='tickets'\">\r\n-          <h2>My Tickets</h2>\r\n-          <div class=\"ticket-list\">\r\n-            <div class=\"ticket-card\" v-for=\"ticket in tickets\" :key=\"ticket.id\">\r\n-              <div>\r\n-                <h3>{{ ticket.passType }}</h3>\r\n-                <p>Start: {{ ticket.startDate }}</p>\r\n-                <p>Status: <span :class=\"ticket.status\">{{ ticket.status }}</span></p>\r\n-              </div>\r\n-              <div class=\"ticket-actions\">\r\n-                <button class=\"btn btn-secondary\" @click=\"editTicket(ticket)\">Edit</button>\r\n-                <button class=\"btn btn-danger\" @click=\"cancelTicket(ticket)\" :disabled=\"ticket.status==='cancelled'\">Cancel</button>\r\n-              </div>\r\n-            </div>\r\n-            <div v-if=\"tickets.length === 0\" class=\"empty-state\">No tickets found.</div>\r\n-          </div>\r\n-        </section>\r\n+                 <!-- My Reservations -->\r\n+         <section v-if=\"activeTab==='reservations'\">\r\n+           <h2>My Reservations</h2>\r\n+           <div class=\"reservation-list\">\r\n+             <div class=\"reservation-card\" v-for=\"reservation in reservations\" :key=\"reservation.id\">\r\n+               <div class=\"reservation-info\">\r\n+                 <h3>{{ reservation.title }}</h3>\r\n+                 <p><strong>Type:</strong> {{ reservation.type }}</p>\r\n+                 <p><strong>Date:</strong> {{ reservation.booking_date }}</p>\r\n+                 <p><strong>Price:</strong> {{ reservation.price }}</p>\r\n+                 <p><strong>Status:</strong> <span :class=\"reservation.status\">{{ reservation.status }}</span></p>\r\n+                 <p v-if=\"reservation.type === 'tour'\"><strong>Adults:</strong> {{ reservation.adult }}, <strong>Children:</strong> {{ reservation.child }}, <strong>Infants:</strong> {{ reservation.infant }}</p>\r\n+                 <p v-if=\"reservation.type === 'pass'\"><strong>Days:</strong> {{ reservation.days }}, <strong>Quantity:</strong> {{ reservation.quantity }}</p>\r\n+               </div>\r\n+               <div class=\"reservation-actions\">\r\n+                 <button class=\"btn btn-secondary\" @click=\"editReservation(reservation)\">Edit</button>\r\n+                 <button class=\"btn btn-danger\" @click=\"cancelReservation(reservation)\" :disabled=\"reservation.status==='cancelled'\">Cancel</button>\r\n+               </div>\r\n+             </div>\r\n+             <div v-if=\"reservations.length === 0\" class=\"empty-state\">No reservations found.</div>\r\n+           </div>\r\n+         </section>\r\n                  <!-- My Info -->\r\n          <section v-if=\"activeTab==='info'\">\r\n            <h2>My Info</h2>\r\n            <form @submit.prevent=\"saveInfo\" class=\"info-form\">\r\n@@ -79,13 +83,10 @@\n const loggedIn = ref(false)\r\n const email = ref('')\r\n const password = ref('')\r\n const loginError = ref('')\r\n-const activeTab = ref('tickets')\r\n-const tickets = ref([\r\n-  { id: 1, passType: '1 Day Pass', startDate: '2024-07-01', status: 'active' },\r\n-  { id: 2, passType: '3 Day Pass', startDate: '2024-06-15', status: 'cancelled' }\r\n-])\r\n+const activeTab = ref('reservations')\r\n+const reservations = ref([])\r\n const userInfo = ref({ \r\n   fullname: '', \r\n   email: '', \r\n   phone: '', \r\n@@ -110,8 +111,10 @@\n     try {\r\n       const user = JSON.parse(userData)\r\n       // Kullanıcı bilgilerini database'den çek\r\n       await fetchUserProfile(user.id)\r\n+      // Kullanıcının reservation'larını çek\r\n+      await fetchUserReservations(user.id)\r\n     } catch (error) {\r\n       console.error('Error parsing user data:', error)\r\n     }\r\n   }\r\n@@ -148,8 +151,32 @@\n     console.error('Error fetching user profile:', error)\r\n   }\r\n }\r\n \r\n+// Kullanıcının reservation'larını database'den çek\r\n+async function fetchUserReservations(userId) {\r\n+  try {\r\n+    const response = await fetch(`https://searchyourtour.com/api/customer/reservations/${userId}`, {\r\n+      method: 'GET',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'Accept': 'application/json',\r\n+        'X-Requested-With': 'XMLHttpRequest'\r\n+      }\r\n+    })\r\n+\r\n+    const result = await response.json()\r\n+    \r\n+    if (result.status) {\r\n+      reservations.value = result.data || []\r\n+    } else {\r\n+      console.error('Failed to fetch user reservations:', result.message)\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Error fetching user reservations:', error)\r\n+  }\r\n+}\r\n+\r\n async function login() {\r\n   try {\r\n     loginError.value = ''\r\n     \r\n@@ -194,10 +221,15 @@\n   // localStorage'dan kullanıcı bilgilerini temizle\r\n   localStorage.removeItem('user')\r\n   localStorage.removeItem('isLoggedIn')\r\n }\r\n-function editTicket(ticket) { alert('Edit ticket: ' + ticket.id) }\r\n-function cancelTicket(ticket) { ticket.status = 'cancelled' }\r\n+function editReservation(reservation) { alert('Edit reservation: ' + reservation.id) }\r\n+function cancelReservation(reservation) { \r\n+  if (confirm('Are you sure you want to cancel this reservation?')) {\r\n+    // Backend'e cancel request gönder\r\n+    cancelReservationBackend(reservation.id)\r\n+  }\r\n+}\r\n async function saveInfo() {\r\n   try {\r\n     const userData = localStorage.getItem('user')\r\n     if (!userData) {\r\n@@ -297,8 +329,39 @@\n     passwordMsg.value = 'An error occurred while changing password. Please try again.'\r\n     passwordSuccess.value = false\r\n   }\r\n }\r\n+\r\n+// Backend'e reservation cancel request gönder\r\n+async function cancelReservationBackend(reservationId) {\r\n+  try {\r\n+    const response = await fetch(`https://searchyourtour.com/api/customer/reservations/cancel/${reservationId}`, {\r\n+      method: 'PUT',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'Accept': 'application/json',\r\n+        'X-Requested-With': 'XMLHttpRequest'\r\n+      }\r\n+    })\r\n+\r\n+    const result = await response.json()\r\n+    \r\n+    if (result.status) {\r\n+      alert('Reservation cancelled successfully!')\r\n+      // Reservation listesini yenile\r\n+      const userData = localStorage.getItem('user')\r\n+      if (userData) {\r\n+        const user = JSON.parse(userData)\r\n+        await fetchUserReservations(user.id)\r\n+      }\r\n+    } else {\r\n+      alert('Failed to cancel reservation: ' + (result.message || 'Unknown error'))\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Error cancelling reservation:', error)\r\n+    alert('An error occurred while cancelling reservation. Please try again.')\r\n+  }\r\n+}\r\n </script>\r\n \r\n <style scoped>\r\n .my-pass-panel { min-height: 100vh; background: #f8f9fa; }\r\n@@ -362,13 +425,16 @@\n .side-menu li { padding: 14px 28px; cursor: pointer; color: #222; font-size: 1.05rem; border-left: 4px solid transparent; transition: background 0.2s, border-color 0.2s; }\r\n .side-menu li.active, .side-menu li:hover { background: #fff; border-left: 4px solid #e6004c; color: #e6004c; }\r\n .logout-btn { margin: 32px 28px 0 28px; }\r\n .main-content { flex: 1; padding: 40px 32px; }\r\n-.ticket-list { margin: 24px 0; }\r\n-.ticket-card { display: flex; justify-content: space-between; align-items: center; background: #f7f7f7; border-radius: 8px; padding: 16px; margin-bottom: 12px; }\r\n-.ticket-actions button { margin-left: 8px; }\r\n-.ticket-card .active { color: #27ae60; }\r\n-.ticket-card .cancelled { color: #fc6421; }\r\n+.reservation-list { margin: 24px 0; }\r\n+.reservation-card { display: flex; justify-content: space-between; align-items: flex-start; background: #f7f7f7; border-radius: 8px; padding: 16px; margin-bottom: 12px; }\r\n+.reservation-info { flex: 1; }\r\n+.reservation-actions { margin-left: 16px; }\r\n+.reservation-actions button { margin-left: 8px; }\r\n+.reservation-card .active { color: #27ae60; }\r\n+.reservation-card .cancelled { color: #fc6421; }\r\n+.reservation-card .pending { color: #f39c12; }\r\n .empty-state { color: #888; text-align: center; margin: 32px 0; font-size: 1.1rem; }\r\n .info-form { max-width: 400px; margin: 0 auto; display: flex; flex-direction: column; gap: 16px; }\r\n .info-form input { width: 100%; padding: 12px; border-radius: 8px; border: 1px solid #eee; font-size: 1rem; background: #fafafa; }\r\n .info-form button { width: 100%; }\r\n"
                },
                {
                    "date": 1754321540793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,21 +28,20 @@\n                  <!-- My Reservations -->\r\n          <section v-if=\"activeTab==='reservations'\">\r\n            <h2>My Reservations</h2>\r\n            <div class=\"reservation-list\">\r\n-             <div class=\"reservation-card\" v-for=\"reservation in reservations\" :key=\"reservation.id\">\r\n-               <div class=\"reservation-info\">\r\n-                 <h3>{{ reservation.title }}</h3>\r\n-                 <p><strong>Type:</strong> {{ reservation.type }}</p>\r\n-                 <p><strong>Date:</strong> {{ reservation.booking_date }}</p>\r\n-                 <p><strong>Price:</strong> {{ reservation.price }}</p>\r\n-                 <p><strong>Status:</strong> <span :class=\"reservation.status\">{{ reservation.status }}</span></p>\r\n-                 <p v-if=\"reservation.type === 'tour'\"><strong>Adults:</strong> {{ reservation.adult }}, <strong>Children:</strong> {{ reservation.child }}, <strong>Infants:</strong> {{ reservation.infant }}</p>\r\n-                 <p v-if=\"reservation.type === 'pass'\"><strong>Days:</strong> {{ reservation.days }}, <strong>Quantity:</strong> {{ reservation.quantity }}</p>\r\n-               </div>\r\n+                           <div class=\"reservation-card\" v-for=\"reservation in reservations\" :key=\"reservation.id\">\r\n+                <div class=\"reservation-info\">\r\n+                  <h3>{{ reservation.tourName }}</h3>\r\n+                  <p><strong>Date:</strong> {{ formatDate(reservation.tour_date) }}</p>\r\n+                  <p><strong>Time:</strong> {{ reservation.tour_time }}</p>\r\n+                  <p><strong>Total:</strong> {{ reservation.total }} {{ reservation.totalCurrency }}</p>\r\n+                  <p><strong>Status:</strong> <span :class=\"reservation.payment_status\">{{ formatStatus(reservation.payment_status) }}</span></p>\r\n+                  <p><strong>Adults:</strong> {{ reservation.adult }}, <strong>Children:</strong> {{ reservation.child }}, <strong>Infants:</strong> {{ reservation.infant }}, <strong>Buggy:</strong> {{ reservation.buggy }}</p>\r\n+                </div>\r\n                <div class=\"reservation-actions\">\r\n                  <button class=\"btn btn-secondary\" @click=\"editReservation(reservation)\">Edit</button>\r\n-                 <button class=\"btn btn-danger\" @click=\"cancelReservation(reservation)\" :disabled=\"reservation.status==='cancelled'\">Cancel</button>\r\n+                                   <button class=\"btn btn-danger\" @click=\"cancelReservation(reservation)\" :disabled=\"!canCancel(reservation.payment_status)\">Cancel</button>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"reservations.length === 0\" class=\"empty-state\">No reservations found.</div>\r\n            </div>\r\n@@ -360,8 +359,39 @@\n     console.error('Error cancelling reservation:', error)\r\n     alert('An error occurred while cancelling reservation. Please try again.')\r\n   }\r\n }\r\n+\r\n+// Tarih formatla\r\n+function formatDate(dateString) {\r\n+  if (!dateString) return 'N/A'\r\n+  const date = new Date(dateString)\r\n+  return date.toLocaleDateString('en-US', {\r\n+    year: 'numeric',\r\n+    month: 'long',\r\n+    day: 'numeric'\r\n+  })\r\n+}\r\n+\r\n+// Status formatla\r\n+function formatStatus(status) {\r\n+  const statusMap = {\r\n+    'pending': 'Pending',\r\n+    'approved': 'Approved',\r\n+    'rejected': 'Rejected',\r\n+    'canceled': 'Canceled',\r\n+    'completed': 'Completed',\r\n+    'waiting': 'Waiting',\r\n+    'paid': 'Paid'\r\n+  }\r\n+  return statusMap[status] || status\r\n+}\r\n+\r\n+// Cancel edilebilir mi kontrol et\r\n+function canCancel(status) {\r\n+  const cancelableStatuses = ['pending', 'waiting', 'approved']\r\n+  return cancelableStatuses.includes(status)\r\n+}\r\n </script>\r\n \r\n <style scoped>\r\n .my-pass-panel { min-height: 100vh; background: #f8f9fa; }\r\n@@ -430,11 +460,15 @@\n .reservation-card { display: flex; justify-content: space-between; align-items: flex-start; background: #f7f7f7; border-radius: 8px; padding: 16px; margin-bottom: 12px; }\r\n .reservation-info { flex: 1; }\r\n .reservation-actions { margin-left: 16px; }\r\n .reservation-actions button { margin-left: 8px; }\r\n-.reservation-card .active { color: #27ae60; }\r\n-.reservation-card .cancelled { color: #fc6421; }\r\n+.reservation-card .paid { color: #27ae60; }\r\n+.reservation-card .approved { color: #27ae60; }\r\n+.reservation-card .completed { color: #27ae60; }\r\n+.reservation-card .canceled { color: #fc6421; }\r\n+.reservation-card .rejected { color: #fc6421; }\r\n .reservation-card .pending { color: #f39c12; }\r\n+.reservation-card .waiting { color: #3498db; }\r\n .empty-state { color: #888; text-align: center; margin: 32px 0; font-size: 1.1rem; }\r\n .info-form { max-width: 400px; margin: 0 auto; display: flex; flex-direction: column; gap: 16px; }\r\n .info-form input { width: 100%; padding: 12px; border-radius: 8px; border: 1px solid #eee; font-size: 1rem; background: #fafafa; }\r\n .info-form button { width: 100%; }\r\n"
                },
                {
                    "date": 1754321933483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,20 +371,11 @@\n     day: 'numeric'\r\n   })\r\n }\r\n \r\n-// Status formatla\r\n+// Status formatla (sadece capitalize yapıyor)\r\n function formatStatus(status) {\r\n-  const statusMap = {\r\n-    'pending': 'Pending',\r\n-    'approved': 'Approved',\r\n-    'rejected': 'Rejected',\r\n-    'canceled': 'Canceled',\r\n-    'completed': 'Completed',\r\n-    'waiting': 'Waiting',\r\n-    'paid': 'Paid'\r\n-  }\r\n-  return statusMap[status] || status\r\n+  return status.charAt(0).toUpperCase() + status.slice(1)\r\n }\r\n \r\n // Cancel edilebilir mi kontrol et\r\n function canCancel(status) {\r\n"
                },
                {
                    "date": 1754322114465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -378,10 +378,20 @@\n }\r\n \r\n // Cancel edilebilir mi kontrol et\r\n function canCancel(status) {\r\n-  const cancelableStatuses = ['pending', 'waiting', 'approved']\r\n-  return cancelableStatuses.includes(status)\r\n+  console.log('Checking cancel for status:', status) // Debug için\r\n+  \r\n+  // Geçici olarak tüm status'ları kabul et (test için)\r\n+  if (!status) {\r\n+    console.log('Status is null/undefined, allowing cancel')\r\n+    return true\r\n+  }\r\n+  \r\n+  const cancelableStatuses = ['pending', 'waiting', 'approved', 'Pending', 'Waiting', 'Approved']\r\n+  const canCancelResult = cancelableStatuses.includes(status)\r\n+  console.log('Can cancel:', canCancelResult) // Debug için\r\n+  return canCancelResult\r\n }\r\n </script>\r\n \r\n <style scoped>\r\n"
                },
                {
                    "date": 1754322184408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,9 +386,10 @@\n     console.log('Status is null/undefined, allowing cancel')\r\n     return true\r\n   }\r\n   \r\n-  const cancelableStatuses = ['pending', 'waiting', 'approved', 'Pending', 'Waiting', 'Approved']\r\n+  // Tüm status'ları kabul et (test için)\r\n+  const cancelableStatuses = ['pending', 'waiting', 'approved', 'paid', 'Pending', 'Waiting', 'Approved', 'Paid']\r\n   const canCancelResult = cancelableStatuses.includes(status)\r\n   console.log('Can cancel:', canCancelResult) // Debug için\r\n   return canCancelResult\r\n }\r\n"
                }
            ],
            "date": 1754295369003,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"my-pass-panel\">\r\n    <div v-if=\"!loggedIn\" class=\"login-outer\">\r\n      <div class=\"login-box\">\r\n        <h2>Customer Login</h2>\r\n        <form @submit.prevent=\"login\">\r\n          <input v-model=\"email\" type=\"email\" placeholder=\"E-mail\" required />\r\n          <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n          <button class=\"btn btn-primary\" type=\"submit\">Login</button>\r\n          <button class=\"btn btn-secondary\" type=\"button\" style=\"margin-top: 10px;\" @click=\"$router.push('/signup')\">Sign Up</button>\r\n        </form>\r\n        <div v-if=\"loginError\" class=\"error\">{{ loginError }}</div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"dashboard-flex\">\r\n      <!-- Sol Menü -->\r\n      <aside class=\"side-menu\">\r\n        <div class=\"menu-title\">My Account</div>\r\n        <ul>\r\n          <li :class=\"{active: activeTab==='tickets'}\" @click=\"activeTab='tickets'\">My Tickets</li>\r\n          <li :class=\"{active: activeTab==='info'}\" @click=\"activeTab='info'\">My Info</li>\r\n          <li :class=\"{active: activeTab==='password'}\" @click=\"activeTab='password'\">Change Password</li>\r\n        </ul>\r\n        <button class=\"btn btn-secondary logout-btn\" @click=\"logout\">Logout</button>\r\n      </aside>\r\n      <!-- Sağ İçerik -->\r\n      <main class=\"main-content\">\r\n        <!-- My Tickets -->\r\n        <section v-if=\"activeTab==='tickets'\">\r\n          <h2>My Tickets</h2>\r\n          <div class=\"ticket-list\">\r\n            <div class=\"ticket-card\" v-for=\"ticket in tickets\" :key=\"ticket.id\">\r\n              <div>\r\n                <h3>{{ ticket.passType }}</h3>\r\n                <p>Start: {{ ticket.startDate }}</p>\r\n                <p>Status: <span :class=\"ticket.status\">{{ ticket.status }}</span></p>\r\n              </div>\r\n              <div class=\"ticket-actions\">\r\n                <button class=\"btn btn-secondary\" @click=\"editTicket(ticket)\">Edit</button>\r\n                <button class=\"btn btn-danger\" @click=\"cancelTicket(ticket)\" :disabled=\"ticket.status==='cancelled'\">Cancel</button>\r\n              </div>\r\n            </div>\r\n            <div v-if=\"tickets.length === 0\" class=\"empty-state\">No tickets found.</div>\r\n          </div>\r\n        </section>\r\n        <!-- My Info -->\r\n        <section v-if=\"activeTab==='info'\">\r\n          <h2>My Info</h2>\r\n          <form @submit.prevent=\"saveInfo\" class=\"info-form\">\r\n            <input v-model=\"userInfo.name\" type=\"text\" placeholder=\"Name\" required />\r\n            <input v-model=\"userInfo.email\" type=\"email\" placeholder=\"E-mail\" required />\r\n            <button class=\"btn btn-primary\" type=\"submit\">Save</button>\r\n          </form>\r\n        </section>\r\n        <!-- Change Password -->\r\n        <section v-if=\"activeTab==='password'\">\r\n          <h2>Change Password</h2>\r\n          <form @submit.prevent=\"changePassword\" class=\"info-form\">\r\n            <input v-model=\"oldPassword\" type=\"password\" placeholder=\"Current Password\" required />\r\n            <input v-model=\"newPassword\" type=\"password\" placeholder=\"New Password\" required />\r\n            <input v-model=\"newPasswordRepeat\" type=\"password\" placeholder=\"Repeat New Password\" required />\r\n            <button class=\"btn btn-primary\" type=\"submit\">Change Password</button>\r\n            <div v-if=\"passwordMsg\" :class=\"passwordSuccess ? 'success' : 'error'\">{{ passwordMsg }}</div>\r\n          </form>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst loggedIn = ref(false)\r\nconst email = ref('')\r\nconst password = ref('')\r\nconst loginError = ref('')\r\nconst activeTab = ref('tickets')\r\nconst tickets = ref([\r\n  { id: 1, passType: '1 Day Pass', startDate: '2024-07-01', status: 'active' },\r\n  { id: 2, passType: '3 Day Pass', startDate: '2024-06-15', status: 'cancelled' }\r\n])\r\nconst userInfo = ref({ name: 'John Doe', email: 'john@example.com' })\r\nconst oldPassword = ref('')\r\nconst newPassword = ref('')\r\nconst newPasswordRepeat = ref('')\r\nconst passwordMsg = ref('')\r\nconst passwordSuccess = ref(false)\r\n\r\n// Sayfa yüklendiğinde kullanıcının login durumunu kontrol et\r\nonMounted(() => {\r\n  const isLoggedIn = localStorage.getItem('isLoggedIn')\r\n  const userData = localStorage.getItem('user')\r\n  \r\n  if (isLoggedIn === 'true' && userData) {\r\n    loggedIn.value = true\r\n    try {\r\n      const user = JSON.parse(userData)\r\n      userInfo.value = {\r\n        name: user.name || 'User',\r\n        email: user.email || ''\r\n      }\r\n    } catch (error) {\r\n      console.error('Error parsing user data:', error)\r\n    }\r\n  }\r\n})\r\n\r\nasync function login() {\r\n  try {\r\n    loginError.value = ''\r\n    \r\n    const response = await fetch('/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n      },\r\n      body: JSON.stringify({\r\n        email: email.value,\r\n        password: password.value\r\n      })\r\n    })\r\n\r\n    const result = await response.json()\r\n    \r\n    if (result.status) {\r\n      // Login başarılı\r\n      loggedIn.value = true\r\n      loginError.value = ''\r\n      \r\n      // Kullanıcı bilgilerini localStorage'a kaydet\r\n      localStorage.setItem('user', JSON.stringify(result.data))\r\n      localStorage.setItem('isLoggedIn', 'true')\r\n      \r\n      // Form alanlarını temizle\r\n      email.value = ''\r\n      password.value = ''\r\n    } else {\r\n      // Login başarısız\r\n      loginError.value = 'Invalid email or password'\r\n    }\r\n  } catch (error) {\r\n    console.error('Login error:', error)\r\n    loginError.value = 'An error occurred during login. Please try again.'\r\n  }\r\n}\r\nfunction logout() { \r\n  loggedIn.value = false\r\n  // localStorage'dan kullanıcı bilgilerini temizle\r\n  localStorage.removeItem('user')\r\n  localStorage.removeItem('isLoggedIn')\r\n}\r\nfunction editTicket(ticket) { alert('Edit ticket: ' + ticket.id) }\r\nfunction cancelTicket(ticket) { ticket.status = 'cancelled' }\r\nfunction saveInfo() { alert('Info saved!') }\r\nfunction changePassword() {\r\n  if (oldPassword.value !== '1234') {\r\n    passwordMsg.value = 'Current password is incorrect.'\r\n    passwordSuccess.value = false\r\n    return\r\n  }\r\n  if (newPassword.value.length < 6) {\r\n    passwordMsg.value = 'New password must be at least 6 characters.'\r\n    passwordSuccess.value = false\r\n    return\r\n  }\r\n  if (newPassword.value !== newPasswordRepeat.value) {\r\n    passwordMsg.value = 'New passwords do not match.'\r\n    passwordSuccess.value = false\r\n    return\r\n  }\r\n  passwordMsg.value = 'Password changed successfully!'\r\n  passwordSuccess.value = true\r\n  oldPassword.value = ''\r\n  newPassword.value = ''\r\n  newPasswordRepeat.value = ''\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.my-pass-panel { min-height: 100vh; background: #f8f9fa; }\r\n.login-outer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background: #f8f9fa;\r\n}\r\n.login-box {\r\n  background: #fff;\r\n  border-radius: 18px;\r\n  box-shadow: 0 4px 32px rgba(0,0,0,0.10);\r\n  padding: 48px 32px 40px 32px;\r\n  min-width: 320px;\r\n  max-width: 360px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.login-box h2 {\r\n  color: #FC6421;\r\n  margin-bottom: 32px;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  text-align: center;\r\n}\r\n.login-box form {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n}\r\n.login-box input {\r\n  width: 100%;\r\n  padding: 14px;\r\n  border-radius: 8px;\r\n  border: 1px solid #eee;\r\n  font-size: 1rem;\r\n  margin-bottom: 0;\r\n  background: #fafafa;\r\n}\r\n.login-box .btn-primary {\r\n  width: 100%;\r\n  margin-top: 8px;\r\n  font-size: 1.1rem;\r\n  padding: 12px 0;\r\n}\r\n.login-box .error {\r\n  color: #fc6421;\r\n  margin-top: 16px;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n}\r\n.dashboard-flex { display: flex; max-width: 900px; margin: 40px auto; background: #fff; border-radius: 16px; box-shadow: 0 2px 16px #0001; }\r\n.side-menu { width: 200px; background: #f7f7f7; border-radius: 16px 0 0 16px; padding: 32px 0 0 0; display: flex; flex-direction: column; align-items: stretch; }\r\n.menu-title { font-size: 1.2rem; font-weight: 700; color: #e6004c; text-align: center; margin-bottom: 2rem; }\r\n.side-menu ul { list-style: none; padding: 0; margin: 0; }\r\n.side-menu li { padding: 14px 28px; cursor: pointer; color: #222; font-size: 1.05rem; border-left: 4px solid transparent; transition: background 0.2s, border-color 0.2s; }\r\n.side-menu li.active, .side-menu li:hover { background: #fff; border-left: 4px solid #e6004c; color: #e6004c; }\r\n.logout-btn { margin: 32px 28px 0 28px; }\r\n.main-content { flex: 1; padding: 40px 32px; }\r\n.ticket-list { margin: 24px 0; }\r\n.ticket-card { display: flex; justify-content: space-between; align-items: center; background: #f7f7f7; border-radius: 8px; padding: 16px; margin-bottom: 12px; }\r\n.ticket-actions button { margin-left: 8px; }\r\n.ticket-card .active { color: #27ae60; }\r\n.ticket-card .cancelled { color: #fc6421; }\r\n.empty-state { color: #888; text-align: center; margin: 32px 0; font-size: 1.1rem; }\r\n.info-form { max-width: 400px; margin: 0 auto; display: flex; flex-direction: column; gap: 16px; }\r\n.info-form input { width: 100%; padding: 12px; border-radius: 8px; border: 1px solid #eee; font-size: 1rem; background: #fafafa; }\r\n.info-form button { width: 100%; }\r\n.success { color: #27ae60; margin-top: 8px; }\r\n.error { color: #fc6421; margin-top: 8px; }\r\n@media (max-width: 900px) {\r\n  .dashboard-flex { flex-direction: column; box-shadow: none; border-radius: 0; max-width: 100vw; margin: 0; }\r\n  .side-menu { width: 100%; border-radius: 0; flex-direction: row; padding: 0; }\r\n  .side-menu ul { display: flex; flex-direction: row; width: 100%; }\r\n  .side-menu li { flex: 1; text-align: center; border-left: none; border-bottom: 4px solid transparent; padding: 14px 0; font-size: 1.1rem; }\r\n  .side-menu li.active, .side-menu li:hover { border-left: none; border-bottom: 4px solid #e6004c; }\r\n  .logout-btn { margin: 16px 8px 0 8px; width: 100%; }\r\n  .main-content { padding: 18px 4px; }\r\n  .ticket-card, .info-form { max-width: 100vw; }\r\n  .ticket-card { flex-direction: column; align-items: flex-start; gap: 8px; padding: 14px; }\r\n  .ticket-actions { width: 100%; display: flex; gap: 8px; }\r\n  .info-form input, .info-form button { font-size: 1.05rem; padding: 14px; }\r\n}\r\n@media (max-width: 500px) {\r\n  .login-box {\r\n    min-width: 0;\r\n    max-width: 100vw;\r\n    padding: 32px 8px 24px 8px;\r\n  }\r\n  .main-content { padding: 8px 2px; }\r\n  .ticket-card { padding: 10px; }\r\n  .info-form { padding: 0 2px; }\r\n}\r\n</style> "
        }
    ]
}