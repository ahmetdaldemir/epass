{
    "sourceFile": "src/views/ToursView.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1751390992794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751445427158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n .loading-spinner {\r\n   width: 50px;\r\n   height: 50px;\r\n   border: 4px solid #f3f3f3;\r\n-  border-top: 4px solid #fc6421;\r\n+  border-top: 4px solid #fc6421;\r\n   border-radius: 50%;\r\n   animation: spin 1s linear infinite;\r\n   margin: 0 auto 1rem;\r\n }\r\n@@ -327,9 +327,9 @@\n /* Error State */\r\n .error-state {\r\n   text-align: center;\r\n   padding: 4rem 0;\r\n-  color: #fc6421;\r\n+  color: #fc6421;\r\n }\r\n \r\n .error-state p {\r\n   margin-bottom: 1rem;\r\n@@ -438,9 +438,9 @@\n \r\n .tour-price {\r\n   font-size: 1.5rem;\r\n   font-weight: 700;\r\n-  color: #fc6421;\r\n+  color: #fc6421;\r\n }\r\n \r\n .btn {\r\n   padding: 0.75rem 1.5rem;\r\n@@ -455,9 +455,9 @@\n   transition: all 0.3s ease;\r\n }\r\n \r\n .btn-primary {\r\n-  background: #fc6421;\r\n+  background: #fc6421;\r\n   color: white;\r\n }\r\n \r\n .btn-primary:hover {\r\n"
                },
                {
                    "date": 1751622837623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -343,8 +343,11 @@\n   gap: 2rem;\r\n }\r\n \r\n .tour-card {\r\n+  display: flex;\r\n+  flex-direction: column;\r\n+  height: 100%;\r\n   background: white;\r\n   border-radius: 12px;\r\n   overflow: hidden;\r\n   box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n@@ -397,8 +400,11 @@\n   transform: scale(1.1);\r\n }\r\n \r\n .tour-content {\r\n+  flex: 1 1 auto;\r\n+  display: flex;\r\n+  flex-direction: column;\r\n   padding: 1.5rem;\r\n }\r\n \r\n .tour-content h3 {\r\n@@ -428,8 +434,9 @@\n   gap: 0.5rem;\r\n }\r\n \r\n .tour-footer {\r\n+  margin-top: auto;\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding-top: 1rem;\r\n"
                },
                {
                    "date": 1751875728749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,13 +44,19 @@\n         </div>\r\n \r\n         <!-- Tours Grid -->\r\n         <div v-else class=\"tours-grid\">\r\n-          <div class=\"tour-card\" v-for=\"tour in filteredTours\" :key=\"tour.id\">\r\n+          <router-link\r\n+            v-for=\"tour in filteredTours\"\r\n+            :key=\"tour.id\"\r\n+            :to=\"`/tour/${tour.id}`\"\r\n+            class=\"tour-card\"\r\n+            style=\"text-decoration: none; color: inherit; display: flex; flex-direction: column; height: 100%;\"\r\n+          >\r\n             <div class=\"tour-image\">\r\n               <img :src=\"getTourImage(tour)\" :alt=\"getTourName(tour)\">\r\n               <div class=\"tour-overlay\">\r\n-                <button @click=\"addToWishlist(tour.id)\" class=\"wishlist-btn\">\r\n+                <button @click.stop=\"addToWishlist(tour.id)\" class=\"wishlist-btn\">\r\n                   <i class=\"fas fa-heart\"></i>\r\n                 </button>\r\n               </div>\r\n             </div>\r\n@@ -68,12 +74,11 @@\n                 </span>\r\n               </div>\r\n               <div class=\"tour-footer\">\r\n                 <div class=\"tour-price\">{{ getTourPrice(tour) }}</div>\r\n-                <router-link :to=\"`/tour/${tour.id}`\" class=\"btn btn-primary\">View Details</router-link>\r\n               </div>\r\n             </div>\r\n-          </div>\r\n+          </router-link>\r\n         </div>\r\n \r\n         <!-- No Results -->\r\n         <div v-if=\"!loading && !error && filteredTours.length === 0\" class=\"no-results\">\r\n"
                },
                {
                    "date": 1752742804405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,12 @@\n const tours = ref([])\r\n const loading = ref(false)\r\n const error = ref(null)\r\n const currentLanguage = ref('en')\r\n-const currentCurrency = ref(5) // USD\r\n+const currentCurrency = computed(() => {\r\n+  const savedCurrency = localStorage.getItem('selectedCurrency') || 'TRY'\r\n+  return getCurrencyId(savedCurrency)\r\n+})\r\n \r\n // Fetch tours from API with language and currency parameters\r\n const fetchTours = async () => {\r\n   loading.value = true\r\n"
                },
                {
                    "date": 1752742811044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,8 +137,20 @@\n   }\r\n   return languageMap[langCode] || 1\r\n }\r\n \r\n+// Helper function to get currency ID from currency code\r\n+const getCurrencyId = (currencyCode) => {\r\n+  const currencyMap = {\r\n+    'TRY': 5,\r\n+    'EUR': 1,\r\n+    'USD': 2,\r\n+    'GBP': 3,\r\n+    'RUB': 4\r\n+  }\r\n+  return currencyMap[currencyCode] || 5\r\n+}\r\n+\r\n // Helper functions to extract data from API response\r\n const getTourName = (tour) => {\r\n   return tour.content?.[0]?.name || 'Unnamed Tour'\r\n }\r\n"
                },
                {
                    "date": 1752742818112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,17 +244,32 @@\n defineExpose({\r\n   updateLanguage\r\n })\r\n \r\n+// Listen for currency change events\r\n+const handleCurrencyChange = (event) => {\r\n+  if (event.detail && event.detail.currency) {\r\n+    console.log('ToursView: Currency changed to:', event.detail.currency, 'ID:', event.detail.currencyId)\r\n+    fetchTours() // Refetch tours with new currency\r\n+  }\r\n+}\r\n+\r\n // Lifecycle\r\n onMounted(() => {\r\n+  // Add event listener for currency changes\r\n+  window.addEventListener('currency-changed', handleCurrencyChange)\r\n   // Get language from localStorage or default to English\r\n   const savedLanguage = localStorage.getItem('selectedLanguage') || 'en'\r\n   currentLanguage.value = savedLanguage\r\n   \r\n   fetchTours()\r\n })\r\n \r\n+onBeforeUnmount(() => {\r\n+  // Remove event listener\r\n+  window.removeEventListener('currency-changed', handleCurrencyChange)\r\n+})\r\n+\r\n // Watch for language changes in localStorage\r\n watch(() => localStorage.getItem('selectedLanguage'), (newLanguage) => {\r\n   if (newLanguage && newLanguage !== currentLanguage.value) {\r\n     currentLanguage.value = newLanguage\r\n"
                },
                {
                    "date": 1752742940237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,15 +140,14 @@\n \r\n // Helper function to get currency ID from currency code\r\n const getCurrencyId = (currencyCode) => {\r\n   const currencyMap = {\r\n-    'TRY': 5,\r\n-    'EUR': 1,\r\n-    'USD': 2,\r\n-    'GBP': 3,\r\n-    'RUB': 4\r\n+    'EUR': 4,\r\n+    'USD': 5,\r\n+    'GBP': 6,\r\n+    'TRY': 7\r\n   }\r\n-  return currencyMap[currencyCode] || 5\r\n+  return currencyMap[currencyCode] || 7\r\n }\r\n \r\n // Helper functions to extract data from API response\r\n const getTourName = (tour) => {\r\n"
                },
                {
                    "date": 1752743290788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n const loading = ref(false)\r\n const error = ref(null)\r\n const currentLanguage = ref('en')\r\n const currentCurrency = computed(() => {\r\n-  const savedCurrency = localStorage.getItem('selectedCurrency') || 'TRY'\r\n+  const savedCurrency = localStorage.getItem('selectedCurrency') || 'EUR'\r\n   return getCurrencyId(savedCurrency)\r\n })\r\n \r\n // Fetch tours from API with language and currency parameters\r\n"
                },
                {
                    "date": 1752743586385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,12 +129,19 @@\n \r\n // Helper function to get language ID from language code\r\n const getLanguageId = (langCode) => {\r\n   const languageMap = {\r\n-    'en': 1,\r\n-    'tr': 2,\r\n-    'de': 6,\r\n-    'ru': 9\r\n+    'tr': 2,    // Türkçe\r\n+    'de': 6,    // Deutsch\r\n+    'en': 1,    // English\r\n+    'ar': 3,    // العربية\r\n+    'es': 4,    // Español\r\n+    'fr': 5,    // Français\r\n+    'it': 7,    // Italiano\r\n+    'pt': 8,    // Português\r\n+    'zh': 10,   // 中文\r\n+    'ja': 11,   // 日本語\r\n+    'ru': 9     // Русский\r\n   }\r\n   return languageMap[langCode] || 1\r\n }\r\n \r\n@@ -145,9 +152,9 @@\n     'USD': 5,\r\n     'GBP': 6,\r\n     'TRY': 7\r\n   }\r\n-  return currencyMap[currencyCode] || 7\r\n+  return currencyMap[currencyCode] || 4\r\n }\r\n \r\n // Helper functions to extract data from API response\r\n const getTourName = (tour) => {\r\n"
                }
            ],
            "date": 1751390992794,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"tours\">\r\n    <!-- Hero Section -->\r\n    <section class=\"hero-section\">\r\n      <div class=\"container\">\r\n        <div class=\"hero-content\">\r\n          <h1 class=\"hero-title\">Discover Istanbul with Our Guided Tours</h1>\r\n          <p class=\"hero-subtitle\">Explore the city's rich history and culture with our expert guides</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Tours Grid -->\r\n    <section class=\"tours-section\">\r\n      <div class=\"container\">\r\n        <div class=\"tours-header\">\r\n          <h2>Available Tours</h2>\r\n          <div class=\"filters\">\r\n            <select v-model=\"selectedDestination\" class=\"filter-select\">\r\n              <option value=\"\">All Destinations</option>\r\n              <option v-for=\"destination in uniqueDestinations\" :key=\"destination\" :value=\"destination\">\r\n                {{ destination }}\r\n              </option>\r\n            </select>\r\n            <select v-model=\"selectedDuration\" class=\"filter-select\">\r\n              <option value=\"\">All Durations</option>\r\n              <option value=\"1-3\">1-3 Hours</option>\r\n              <option value=\"4-6\">4-6 Hours</option>\r\n              <option value=\"7+\">7+ Hours</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Loading State -->\r\n        <div v-if=\"loading\" class=\"loading-state\">\r\n          <div class=\"loading-spinner\"></div>\r\n          <p>Loading tours...</p>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div v-else-if=\"error\" class=\"error-state\">\r\n          <p>{{ error }}</p>\r\n          <button @click=\"fetchTours\" class=\"btn btn-primary\">Try Again</button>\r\n        </div>\r\n\r\n        <!-- Tours Grid -->\r\n        <div v-else class=\"tours-grid\">\r\n          <div class=\"tour-card\" v-for=\"tour in filteredTours\" :key=\"tour.id\">\r\n            <div class=\"tour-image\">\r\n              <img :src=\"getTourImage(tour)\" :alt=\"getTourName(tour)\">\r\n              <div class=\"tour-overlay\">\r\n                <button @click=\"addToWishlist(tour.id)\" class=\"wishlist-btn\">\r\n                  <i class=\"fas fa-heart\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"tour-content\">\r\n              <h3>{{ getTourName(tour) }}</h3>\r\n              <p>{{ getTourDescription(tour) }}</p>\r\n              <div class=\"tour-meta\">\r\n                <span class=\"destination\">\r\n                  <i class=\"fas fa-map-marker-alt\"></i>\r\n                  {{ getDestinationName(tour) }}\r\n                </span>\r\n                <span class=\"duration\">\r\n                  <i class=\"fas fa-clock\"></i>\r\n                  {{ getTourDuration(tour) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"tour-footer\">\r\n                <div class=\"tour-price\">{{ getTourPrice(tour) }}</div>\r\n                <router-link :to=\"`/tour/${tour.id}`\" class=\"btn btn-primary\">View Details</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- No Results -->\r\n        <div v-if=\"!loading && !error && filteredTours.length === 0\" class=\"no-results\">\r\n          <p>No tours found matching your criteria.</p>\r\n          <button @click=\"clearFilters\" class=\"btn btn-primary\">Clear Filters</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\n\r\nconst selectedDestination = ref('')\r\nconst selectedDuration = ref('')\r\nconst tours = ref([])\r\nconst loading = ref(false)\r\nconst error = ref(null)\r\nconst currentLanguage = ref('en')\r\nconst currentCurrency = ref(5) // USD\r\n\r\n// Fetch tours from API with language and currency parameters\r\nconst fetchTours = async () => {\r\n  loading.value = true\r\n  error.value = null\r\n  \r\n  try {\r\n    const url = `https://searchyourtour.com/api/tours?token=ad5257a5-efdd-4314-9e5e-b56aabe321f1&language_id=${getLanguageId(currentLanguage.value)}&currency_id=${currentCurrency.value}&limit=100&IpAdrress=78.177.166.135`\r\n    \r\n    const response = await fetch(url)\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch tours')\r\n    }\r\n    \r\n    const data = await response.json()\r\n    tours.value = data || []\r\n  } catch (err) {\r\n    error.value = 'Failed to load tours. Please try again later.'\r\n    console.error('Error fetching tours:', err)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// Helper function to get language ID from language code\r\nconst getLanguageId = (langCode) => {\r\n  const languageMap = {\r\n    'en': 1,\r\n    'tr': 2,\r\n    'de': 6,\r\n    'ru': 9\r\n  }\r\n  return languageMap[langCode] || 1\r\n}\r\n\r\n// Helper functions to extract data from API response\r\nconst getTourName = (tour) => {\r\n  return tour.content?.[0]?.name || 'Unnamed Tour'\r\n}\r\n\r\nconst getTourDescription = (tour) => {\r\n  const metaContent = tour.content?.[0]?.meta_content\r\n  if (!metaContent) return 'No description available'\r\n  \r\n  // Remove HTML tags and extract plain text\r\n  const tempDiv = document.createElement('div')\r\n  tempDiv.innerHTML = metaContent\r\n  const text = tempDiv.textContent || tempDiv.innerText || ''\r\n  return text.length > 150 ? text.substring(0, 150) + '...' : text\r\n}\r\n\r\nconst getTourImage = (tour) => {\r\n  return tour.files?.[0]?.url || 'https://via.placeholder.com/400x250?text=No+Image'\r\n}\r\n\r\nconst getDestinationName = (tour) => {\r\n  return tour.destination?.name || 'Unknown Destination'\r\n}\r\n\r\nconst getTourPrice = (tour) => {\r\n  const price = tour.tour_price?.[0]\r\n  if (!price) return 'Price on request'\r\n  \r\n  const currency = price.currency_icon || '$'\r\n  return `${currency}${price.price}`\r\n}\r\n\r\nconst getTourDuration = (tour) => {\r\n  const duration = tour.tour_duraction\r\n  const type = tour.tour_duraction_type || 'hour'\r\n  \r\n  if (!duration) return 'Duration not specified'\r\n  \r\n  if (type === 'hour') {\r\n    return `${duration} ${duration === 1 ? 'Hour' : 'Hours'}`\r\n  } else if (type === 'day') {\r\n    return `${duration} ${duration === 1 ? 'Day' : 'Days'}`\r\n  }\r\n  \r\n  return `${duration} ${type}s`\r\n}\r\n\r\n// Computed properties\r\nconst uniqueDestinations = computed(() => {\r\n  const destinations = tours.value.map(tour => tour.destination?.name).filter(Boolean)\r\n  return [...new Set(destinations)]\r\n})\r\n\r\nconst filteredTours = computed(() => {\r\n  return tours.value.filter(tour => {\r\n    const destinationMatch = !selectedDestination.value || \r\n      tour.destination?.name === selectedDestination.value\r\n    \r\n    const durationMatch = !selectedDuration.value || \r\n      (() => {\r\n        const duration = tour.tour_duraction\r\n        switch (selectedDuration.value) {\r\n          case '1-3': return duration >= 1 && duration <= 3\r\n          case '4-6': return duration >= 4 && duration <= 6\r\n          case '7+': return duration >= 7\r\n          default: return true\r\n        }\r\n      })()\r\n    \r\n    return destinationMatch && durationMatch\r\n  })\r\n})\r\n\r\n// Methods\r\nconst addToWishlist = (tourId) => {\r\n  console.log('Adding tour to wishlist:', tourId)\r\n  // Implement wishlist functionality\r\n}\r\n\r\nconst clearFilters = () => {\r\n  selectedDestination.value = ''\r\n  selectedDuration.value = ''\r\n}\r\n\r\n// Watch for language changes\r\nconst updateLanguage = (newLanguage) => {\r\n  currentLanguage.value = newLanguage\r\n  fetchTours() // Refetch tours with new language\r\n}\r\n\r\n// Expose method for parent components\r\ndefineExpose({\r\n  updateLanguage\r\n})\r\n\r\n// Lifecycle\r\nonMounted(() => {\r\n  // Get language from localStorage or default to English\r\n  const savedLanguage = localStorage.getItem('selectedLanguage') || 'en'\r\n  currentLanguage.value = savedLanguage\r\n  \r\n  fetchTours()\r\n})\r\n\r\n// Watch for language changes in localStorage\r\nwatch(() => localStorage.getItem('selectedLanguage'), (newLanguage) => {\r\n  if (newLanguage && newLanguage !== currentLanguage.value) {\r\n    currentLanguage.value = newLanguage\r\n    fetchTours()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.tours {\r\n  min-height: 100vh;\r\n}\r\n\r\n/* Hero Section */\r\n.hero-section {\r\n  background: #FC6421;\r\n  color: white;\r\n  padding: 4rem 0;\r\n  text-align: center;\r\n}\r\n\r\n.hero-title {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.hero-subtitle {\r\n  font-size: 1.2rem;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* Tours Section */\r\n.tours-section {\r\n  padding: 4rem 0;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.tours-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 3rem;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.tours-header h2 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.75rem 1rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  background: white;\r\n  font-size: 1rem;\r\n  min-width: 150px;\r\n}\r\n\r\n/* Loading State */\r\n.loading-state {\r\n  text-align: center;\r\n  padding: 4rem 0;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #fc6421;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Error State */\r\n.error-state {\r\n  text-align: center;\r\n  padding: 4rem 0;\r\n  color: #fc6421;\r\n}\r\n\r\n.error-state p {\r\n  margin-bottom: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n/* Tours Grid */\r\n.tours-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.tour-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.tour-card:hover {\r\n  transform: translateY(-8px);\r\n  box-shadow: 0 8px 30px rgba(0,0,0,0.15);\r\n}\r\n\r\n.tour-image {\r\n  position: relative;\r\n  height: 250px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tour-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.tour-card:hover .tour-image img {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.tour-overlay {\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n}\r\n\r\n.wishlist-btn {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.wishlist-btn:hover {\r\n  background: white;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.tour-content {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.tour-content h3 {\r\n  font-size: 1.3rem;\r\n  margin-bottom: 0.75rem;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.tour-content p {\r\n  color: #666;\r\n  line-height: 1.6;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.tour-meta {\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.tour-meta span {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.tour-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.tour-price {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #fc6421;\r\n}\r\n\r\n.btn {\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-primary {\r\n  background: #fc6421;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #c0392b;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* No Results */\r\n.no-results {\r\n  text-align: center;\r\n  padding: 4rem 0;\r\n  color: #666;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .hero-title {\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .tours-header {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .filters {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .tours-grid {\r\n    grid-template-columns: 1fr;\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .tour-footer {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .tour-price {\r\n    text-align: center;\r\n  }\r\n}\r\n</style> "
        }
    ]
}