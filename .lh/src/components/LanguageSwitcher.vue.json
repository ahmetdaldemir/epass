{
    "sourceFile": "src/components/LanguageSwitcher.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1751531475137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751531611953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,14 +151,24 @@\n   border-radius: 4px;\r\n   background: #f8f9fa;\r\n   border: 1px solid #dee2e6;\r\n   transition: all 0.3s ease;\r\n+  min-width: 120px;\r\n+  justify-content: flex-start;\r\n }\r\n \r\n .active-lang:hover {\r\n   background: #e9ecef;\r\n }\r\n \r\n+.active-lang i {\r\n+  font-size: 20px;\r\n+  min-width: 24px;\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+}\r\n+\r\n .lang-dropdown {\r\n   position: absolute;\r\n   top: 100%;\r\n   right: 0;\r\n@@ -185,20 +195,29 @@\n \r\n .lang-dropdown a {\r\n   display: flex;\r\n   align-items: center;\r\n-  justify-content: left;\r\n+  justify-content: flex-start;\r\n   gap: 10px;\r\n   padding: 12px 16px;\r\n   text-decoration: none;\r\n   color: #333;\r\n   transition: background-color 0.3s ease;\r\n+  min-width: 120px;\r\n }\r\n \r\n .lang-dropdown a:hover {\r\n   background-color: #f8f9fa;\r\n }\r\n \r\n+.lang-dropdown i {\r\n+  font-size: 20px;\r\n+  min-width: 24px;\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+}\r\n+\r\n .fi {\r\n   font-size: 16px;\r\n }\r\n \r\n"
                },
                {
                    "date": 1751531717068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,32 +192,35 @@\n .lang-dropdown li:last-child {\r\n   border-bottom: none;\r\n }\r\n \r\n+.lang-dropdown i {\r\n+  font-size: 20px;\r\n+  min-width: 32px;\r\n+  min-height: 20px;\r\n+  width: 32px;\r\n+  height: 20px;\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+}\r\n+\r\n .lang-dropdown a {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: flex-start;\r\n-  gap: 10px;\r\n+  gap: 14px;\r\n   padding: 12px 16px;\r\n   text-decoration: none;\r\n   color: #333;\r\n   transition: background-color 0.3s ease;\r\n-  min-width: 120px;\r\n+  min-width: 140px;\r\n }\r\n \r\n .lang-dropdown a:hover {\r\n   background-color: #f8f9fa;\r\n }\r\n \r\n-.lang-dropdown i {\r\n-  font-size: 20px;\r\n-  min-width: 24px;\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: center;\r\n-}\r\n-\r\n .fi {\r\n   font-size: 16px;\r\n }\r\n \r\n"
                },
                {
                    "date": 1751531942750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,15 +117,15 @@\n   document.addEventListener('click', handleClickOutside)\r\n   \r\n   // Initialize language from meta tag or localStorage\r\n   const metaLanguage = document.querySelector(\"meta[name='language']\")?.getAttribute('content')\r\n-  if (metaLanguage) {\r\n-    currentLanguage.value = metaLanguage\r\n-  }\r\n-  \r\n   const savedLanguage = localStorage.getItem('selectedLanguage')\r\n   if (savedLanguage) {\r\n     currentLanguage.value = savedLanguage\r\n+  } else if (metaLanguage) {\r\n+    currentLanguage.value = metaLanguage\r\n+  } else {\r\n+    currentLanguage.value = 'en'\r\n   }\r\n   \r\n   // Fetch languages from API\r\n   fetchLanguages()\r\n@@ -198,8 +198,10 @@\n   min-width: 32px;\r\n   min-height: 20px;\r\n   width: 32px;\r\n   height: 20px;\r\n+  line-height: 20px;\r\n+  vertical-align: middle;\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n }\r\n"
                },
                {
                    "date": 1751532226870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,10 @@\n           :data-lang=\"lang.code\" \r\n           :data-value=\"lang.name\" \r\n           href=\"#\" \r\n           @click.prevent=\"changeLanguage(lang.code)\"\r\n-          :style=\"{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px' }\"\r\n         >\r\n-          <i :class=\"`fi fi-${lang.flag}`\"></i>\r\n+          <i :class=\"getLanguageIcon(lang.code)\"></i>\r\n           {{ lang.name }}\r\n         </a>\r\n       </li>\r\n     </ul>\r\n@@ -192,21 +191,8 @@\n .lang-dropdown li:last-child {\r\n   border-bottom: none;\r\n }\r\n \r\n-.lang-dropdown i {\r\n-  font-size: 20px;\r\n-  min-width: 32px;\r\n-  min-height: 20px;\r\n-  width: 32px;\r\n-  height: 20px;\r\n-  line-height: 20px;\r\n-  vertical-align: middle;\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: center;\r\n-}\r\n-\r\n .lang-dropdown a {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: flex-start;\r\n@@ -215,14 +201,30 @@\n   text-decoration: none;\r\n   color: #333;\r\n   transition: background-color 0.3s ease;\r\n   min-width: 140px;\r\n+  width: 100%;\r\n+  box-sizing: border-box;\r\n }\r\n \r\n .lang-dropdown a:hover {\r\n   background-color: #f8f9fa;\r\n }\r\n \r\n+.lang-dropdown i {\r\n+  font-size: 20px;\r\n+  min-width: 32px;\r\n+  min-height: 20px;\r\n+  width: 32px;\r\n+  height: 20px;\r\n+  line-height: 20px;\r\n+  vertical-align: middle;\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+  text-align: left;\r\n+}\r\n+\r\n .fi {\r\n   font-size: 16px;\r\n }\r\n \r\n"
                },
                {
                    "date": 1751534145455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,15 +145,17 @@\n   display: flex;\r\n   align-items: center;\r\n   gap: 8px;\r\n   cursor: pointer;\r\n-  padding: 8px 12px;\r\n+  padding: 0 18px;\r\n   border-radius: 4px;\r\n   background: #f8f9fa;\r\n   border: 1px solid #dee2e6;\r\n   transition: all 0.3s ease;\r\n   min-width: 120px;\r\n   justify-content: flex-start;\r\n+  height: 40px;\r\n+  font-size: 16px;\r\n }\r\n \r\n .active-lang:hover {\r\n   background: #e9ecef;\r\n"
                },
                {
                    "date": 1752742049587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,13 @@\n   \r\n   // Emit event for parent components\r\n   emit('language-changed', langCode)\r\n   \r\n+  // Dispatch custom event for global listeners\r\n+  window.dispatchEvent(new CustomEvent('language-changed', {\r\n+    detail: { language: langCode }\r\n+  }))\r\n+  \r\n   // Call the original doGTranslate function if it exists\r\n   if (typeof window.doGTranslate === 'function') {\r\n     const lang = languages.value.find(l => l && l.code === langCode)\r\n     window.doGTranslate({ dataset: { lang: langCode, value: lang ? lang.name : langCode } })\r\n"
                },
                {
                    "date": 1752743605594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,37 +29,27 @@\n const languages = ref([])\r\n const loading = ref(false)\r\n const error = ref(null)\r\n \r\n-// Fetch languages from API\r\n-const fetchLanguages = async () => {\r\n-  loading.value = true\r\n-  error.value = null\r\n+// Static language list based on database IDs\r\n+const fetchLanguages = () => {\r\n+  languages.value = [\r\n+    { id: 2, code: 'tr', name: 'Türkçe', flag: 'tr', status: true },\r\n+    { id: 6, code: 'de', name: 'Deutsch', flag: 'de', status: true },\r\n+    { id: 1, code: 'en', name: 'English', flag: 'gb', status: true },\r\n+    { id: 3, code: 'ar', name: 'العربية', flag: 'sa', status: true },\r\n+    { id: 4, code: 'es', name: 'Español', flag: 'es', status: true },\r\n+    { id: 5, code: 'fr', name: 'Français', flag: 'fr', status: true },\r\n+    { id: 7, code: 'it', name: 'Italiano', flag: 'it', status: true },\r\n+    { id: 8, code: 'pt', name: 'Português', flag: 'pt', status: true },\r\n+    { id: 10, code: 'zh', name: '中文', flag: 'cn', status: true },\r\n+    { id: 11, code: 'ja', name: '日本語', flag: 'jp', status: true },\r\n+    { id: 9, code: 'ru', name: 'Русский', flag: 'ru', status: true }\r\n+  ]\r\n   \r\n-  try {\r\n-    const response = await fetch('https://searchyourtour.com/api/languages?token=ad5257a5-efdd-4314-9e5e-b56aabe321f1')\r\n-    if (!response.ok) {\r\n-      throw new Error('Failed to fetch languages')\r\n-    }\r\n-    \r\n-    const data = await response.json()\r\n-    if (data && Array.isArray(data)) {\r\n-      languages.value = data\r\n-      \r\n-      // Set default language to first available language if none is set\r\n-      if (languages.value.length > 0 && !currentLanguage.value) {\r\n-        const defaultLang = languages.value.find(lang => lang && lang.status) || languages.value[0]\r\n-        if (defaultLang) {\r\n-          currentLanguage.value = defaultLang.code\r\n-        }\r\n-      }\r\n-    }\r\n-  } catch (err) {\r\n-    error.value = 'Failed to load languages'\r\n-    console.error('Error fetching languages:', err)\r\n-    // Keep the default languages if API fails\r\n-  } finally {\r\n-    loading.value = false\r\n+  // Set default language to English if none is set\r\n+  if (!currentLanguage.value) {\r\n+    currentLanguage.value = 'en'\r\n   }\r\n }\r\n \r\n // Methods\r\n"
                },
                {
                    "date": 1752743613236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n \r\n const getLanguageIcon = (langCode) => {\r\n   const lang = languages.value.find(l => l && l.code === langCode)\r\n   if (!lang) return 'fi fi-gb'\r\n-  if (lang.code === 'en') return 'fi fi-gb'\r\n   return lang.flag ? `fi fi-${lang.flag}` : 'fi fi-gb'\r\n }\r\n \r\n const getLanguageCode = (langCode) => {\r\n"
                }
            ],
            "date": 1751531475137,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"lang-switch\">\r\n    <span class=\"active-lang\" @click=\"toggleDropdown\">\r\n      <i :class=\"getLanguageIcon(currentLanguage)\" :data-active-language=\"currentLanguage\"></i>\r\n      {{ getLanguageCode(currentLanguage) }}\r\n    </span>\r\n    <ul class=\"lang-dropdown\" v-show=\"isDropdownOpen\">\r\n      <li v-for=\"lang in languages\" :key=\"lang.id\" >\r\n        <a \r\n          :data-lang=\"lang.code\" \r\n          :data-value=\"lang.name\" \r\n          href=\"#\" \r\n          @click.prevent=\"changeLanguage(lang.code)\"\r\n          :style=\"{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px' }\"\r\n        >\r\n          <i :class=\"`fi fi-${lang.flag}`\"></i>\r\n          {{ lang.name }}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\n// Reactive data\r\nconst currentLanguage = ref('en')\r\nconst isDropdownOpen = ref(false)\r\nconst languages = ref([])\r\nconst loading = ref(false)\r\nconst error = ref(null)\r\n\r\n// Fetch languages from API\r\nconst fetchLanguages = async () => {\r\n  loading.value = true\r\n  error.value = null\r\n  \r\n  try {\r\n    const response = await fetch('https://searchyourtour.com/api/languages?token=ad5257a5-efdd-4314-9e5e-b56aabe321f1')\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch languages')\r\n    }\r\n    \r\n    const data = await response.json()\r\n    if (data && Array.isArray(data)) {\r\n      languages.value = data\r\n      \r\n      // Set default language to first available language if none is set\r\n      if (languages.value.length > 0 && !currentLanguage.value) {\r\n        const defaultLang = languages.value.find(lang => lang && lang.status) || languages.value[0]\r\n        if (defaultLang) {\r\n          currentLanguage.value = defaultLang.code\r\n        }\r\n      }\r\n    }\r\n  } catch (err) {\r\n    error.value = 'Failed to load languages'\r\n    console.error('Error fetching languages:', err)\r\n    // Keep the default languages if API fails\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// Methods\r\nconst toggleDropdown = () => {\r\n  isDropdownOpen.value = !isDropdownOpen.value\r\n}\r\n\r\nconst changeLanguage = (langCode) => {\r\n  currentLanguage.value = langCode\r\n  isDropdownOpen.value = false\r\n  \r\n  // Save to localStorage\r\n  localStorage.setItem('selectedLanguage', langCode)\r\n  \r\n  // Emit event for parent components\r\n  emit('language-changed', langCode)\r\n  \r\n  // Call the original doGTranslate function if it exists\r\n  if (typeof window.doGTranslate === 'function') {\r\n    const lang = languages.value.find(l => l && l.code === langCode)\r\n    window.doGTranslate({ dataset: { lang: langCode, value: lang ? lang.name : langCode } })\r\n  }\r\n}\r\n\r\nconst getLanguageIcon = (langCode) => {\r\n  const lang = languages.value.find(l => l && l.code === langCode)\r\n  if (!lang) return 'fi fi-gb'\r\n  if (lang.code === 'en') return 'fi fi-gb'\r\n  return lang.flag ? `fi fi-${lang.flag}` : 'fi fi-gb'\r\n}\r\n\r\nconst getLanguageCode = (langCode) => {\r\n  const lang = languages.value.find(l => l && l.code === langCode)\r\n  return lang ? lang.name : langCode.toUpperCase()\r\n}\r\n\r\nconst getLanguageName = (langCode) => {\r\n  const lang = languages.value.find(l => l && l.code === langCode)\r\n  return lang ? lang.name : 'English'\r\n}\r\n\r\n// Close dropdown when clicking outside\r\nconst handleClickOutside = (event) => {\r\n  if (!event.target.closest('.lang-switch')) {\r\n    isDropdownOpen.value = false\r\n  }\r\n}\r\n\r\n// Emit events\r\nconst emit = defineEmits(['language-changed'])\r\n\r\n// Lifecycle\r\nonMounted(() => {\r\n  document.addEventListener('click', handleClickOutside)\r\n  \r\n  // Initialize language from meta tag or localStorage\r\n  const metaLanguage = document.querySelector(\"meta[name='language']\")?.getAttribute('content')\r\n  if (metaLanguage) {\r\n    currentLanguage.value = metaLanguage\r\n  }\r\n  \r\n  const savedLanguage = localStorage.getItem('selectedLanguage')\r\n  if (savedLanguage) {\r\n    currentLanguage.value = savedLanguage\r\n  }\r\n  \r\n  // Fetch languages from API\r\n  fetchLanguages()\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.lang-switch {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.active-lang {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  background: #f8f9fa;\r\n  border: 1px solid #dee2e6;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.active-lang:hover {\r\n  background: #e9ecef;\r\n}\r\n\r\n.lang-dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  background: white;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  min-width: 200px;\r\n  z-index: 1000;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.lang-dropdown li {\r\n  border-bottom: 1px solid #f1f3f4;\r\n}\r\n\r\n.lang-dropdown li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.lang-dropdown a {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  gap: 10px;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.lang-dropdown a:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.fi {\r\n  font-size: 16px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .lang-dropdown {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 90%;\r\n    max-width: 300px;\r\n    max-height: 80vh;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n</style>\r\n"
        }
    ]
}